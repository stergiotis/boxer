// Code generated; Leeway CT (github.com/stergiotis/boxer/public/app) DO NOT EDIT.

package ctabb

import "github.com/stergiotis/boxer/public/semistructured/leeway/canonicalTypes"

var U32 = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 32, ByteOrderModifier: 0, ScalarModifier: 0}
var I32 = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 32, ByteOrderModifier: 0, ScalarModifier: 0}
var F32 = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 32, ByteOrderModifier: 0, ScalarModifier: 0}
var U64 = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 64, ByteOrderModifier: 0, ScalarModifier: 0}
var I64 = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 64, ByteOrderModifier: 0, ScalarModifier: 0}
var F64 = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 64, ByteOrderModifier: 0, ScalarModifier: 0}
var U32l = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 32, ByteOrderModifier: 'l', ScalarModifier: 0}
var I32l = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 32, ByteOrderModifier: 'l', ScalarModifier: 0}
var F32l = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 32, ByteOrderModifier: 'l', ScalarModifier: 0}
var U64l = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 64, ByteOrderModifier: 'l', ScalarModifier: 0}
var I64l = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 64, ByteOrderModifier: 'l', ScalarModifier: 0}
var F64l = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 64, ByteOrderModifier: 'l', ScalarModifier: 0}
var U32n = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 32, ByteOrderModifier: 'n', ScalarModifier: 0}
var I32n = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 32, ByteOrderModifier: 'n', ScalarModifier: 0}
var F32n = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 32, ByteOrderModifier: 'n', ScalarModifier: 0}
var U64n = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 64, ByteOrderModifier: 'n', ScalarModifier: 0}
var I64n = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 64, ByteOrderModifier: 'n', ScalarModifier: 0}
var F64n = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 64, ByteOrderModifier: 'n', ScalarModifier: 0}
var U32h = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 32, ByteOrderModifier: 0, ScalarModifier: 'h'}
var I32h = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 32, ByteOrderModifier: 0, ScalarModifier: 'h'}
var F32h = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 32, ByteOrderModifier: 0, ScalarModifier: 'h'}
var U64h = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 64, ByteOrderModifier: 0, ScalarModifier: 'h'}
var I64h = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 64, ByteOrderModifier: 0, ScalarModifier: 'h'}
var F64h = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 64, ByteOrderModifier: 0, ScalarModifier: 'h'}
var U32lh = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 32, ByteOrderModifier: 'l', ScalarModifier: 'h'}
var I32lh = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 32, ByteOrderModifier: 'l', ScalarModifier: 'h'}
var F32lh = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 32, ByteOrderModifier: 'l', ScalarModifier: 'h'}
var U64lh = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 64, ByteOrderModifier: 'l', ScalarModifier: 'h'}
var I64lh = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 64, ByteOrderModifier: 'l', ScalarModifier: 'h'}
var F64lh = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 64, ByteOrderModifier: 'l', ScalarModifier: 'h'}
var U32nh = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 32, ByteOrderModifier: 'n', ScalarModifier: 'h'}
var I32nh = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 32, ByteOrderModifier: 'n', ScalarModifier: 'h'}
var F32nh = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 32, ByteOrderModifier: 'n', ScalarModifier: 'h'}
var U64nh = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 64, ByteOrderModifier: 'n', ScalarModifier: 'h'}
var I64nh = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 64, ByteOrderModifier: 'n', ScalarModifier: 'h'}
var F64nh = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 64, ByteOrderModifier: 'n', ScalarModifier: 'h'}
var U32m = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 32, ByteOrderModifier: 0, ScalarModifier: 'm'}
var I32m = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 32, ByteOrderModifier: 0, ScalarModifier: 'm'}
var F32m = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 32, ByteOrderModifier: 0, ScalarModifier: 'm'}
var U64m = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 64, ByteOrderModifier: 0, ScalarModifier: 'm'}
var I64m = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 64, ByteOrderModifier: 0, ScalarModifier: 'm'}
var F64m = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 64, ByteOrderModifier: 0, ScalarModifier: 'm'}
var U32lm = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 32, ByteOrderModifier: 'l', ScalarModifier: 'm'}
var I32lm = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 32, ByteOrderModifier: 'l', ScalarModifier: 'm'}
var F32lm = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 32, ByteOrderModifier: 'l', ScalarModifier: 'm'}
var U64lm = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 64, ByteOrderModifier: 'l', ScalarModifier: 'm'}
var I64lm = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 64, ByteOrderModifier: 'l', ScalarModifier: 'm'}
var F64lm = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 64, ByteOrderModifier: 'l', ScalarModifier: 'm'}
var U32nm = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 32, ByteOrderModifier: 'n', ScalarModifier: 'm'}
var I32nm = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 32, ByteOrderModifier: 'n', ScalarModifier: 'm'}
var F32nm = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 32, ByteOrderModifier: 'n', ScalarModifier: 'm'}
var U64nm = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'u', Width: 64, ByteOrderModifier: 'n', ScalarModifier: 'm'}
var I64nm = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'i', Width: 64, ByteOrderModifier: 'n', ScalarModifier: 'm'}
var F64nm = canonicalTypes.MachineNumericTypeAstNode{BaseType: 'f', Width: 64, ByteOrderModifier: 'n', ScalarModifier: 'm'}
var Z32 = canonicalTypes.TemporalTypeAstNode{BaseType: 'z', Width: 32, ScalarModifier: 0}
var D32 = canonicalTypes.TemporalTypeAstNode{BaseType: 'd', Width: 32, ScalarModifier: 0}
var T32 = canonicalTypes.TemporalTypeAstNode{BaseType: 't', Width: 32, ScalarModifier: 0}
var Z64 = canonicalTypes.TemporalTypeAstNode{BaseType: 'z', Width: 64, ScalarModifier: 0}
var D64 = canonicalTypes.TemporalTypeAstNode{BaseType: 'd', Width: 64, ScalarModifier: 0}
var T64 = canonicalTypes.TemporalTypeAstNode{BaseType: 't', Width: 64, ScalarModifier: 0}
var Z32h = canonicalTypes.TemporalTypeAstNode{BaseType: 'z', Width: 32, ScalarModifier: 'h'}
var D32h = canonicalTypes.TemporalTypeAstNode{BaseType: 'd', Width: 32, ScalarModifier: 'h'}
var T32h = canonicalTypes.TemporalTypeAstNode{BaseType: 't', Width: 32, ScalarModifier: 'h'}
var Z64h = canonicalTypes.TemporalTypeAstNode{BaseType: 'z', Width: 64, ScalarModifier: 'h'}
var D64h = canonicalTypes.TemporalTypeAstNode{BaseType: 'd', Width: 64, ScalarModifier: 'h'}
var T64h = canonicalTypes.TemporalTypeAstNode{BaseType: 't', Width: 64, ScalarModifier: 'h'}
var Z32m = canonicalTypes.TemporalTypeAstNode{BaseType: 'z', Width: 32, ScalarModifier: 'm'}
var D32m = canonicalTypes.TemporalTypeAstNode{BaseType: 'd', Width: 32, ScalarModifier: 'm'}
var T32m = canonicalTypes.TemporalTypeAstNode{BaseType: 't', Width: 32, ScalarModifier: 'm'}
var Z64m = canonicalTypes.TemporalTypeAstNode{BaseType: 'z', Width: 64, ScalarModifier: 'm'}
var D64m = canonicalTypes.TemporalTypeAstNode{BaseType: 'd', Width: 64, ScalarModifier: 'm'}
var T64m = canonicalTypes.TemporalTypeAstNode{BaseType: 't', Width: 64, ScalarModifier: 'm'}
